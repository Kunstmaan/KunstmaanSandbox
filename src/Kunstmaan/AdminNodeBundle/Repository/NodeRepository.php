<?php

namespace Kunstmaan\AdminNodeBundle\Repository;


use Kunstmaan\AdminBundle\Entity\PageIFace;
use Kunstmaan\AdminBundle\Modules\ClassLookup;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * NodeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NodeRepository extends EntityRepository
{
	public function getTopNodes($user, $permission)
	{
	    $qb = $this->createQueryBuilder('b')
	               ->select('b')
                   ->where('b.parent is null')
                   ->andWhere('b.id IN (
                        SELECT p.refId FROM Kunstmaan\AdminBundle\Entity\Permission p WHERE p.refEntityname = b.refEntityname AND p.permissions LIKE ?1 AND p.refGroup IN(?2)
                   )')
	               ->addOrderBy('b.sequencenumber', 'DESC')
                   ->setParameter(1, '%|'.$permission.':1|%')
                   ->setParameter(2, $user->getGroupIds());

	    return $qb->getQuery()
	              ->getResult();
	}
	
	public function getNodeFor(PageIFace $page) {
		return $this->findOneBy(array('refId' => $page->getId(), 'refEntityname' => ClassLookup::getClass($page)));
	}
	
	public function getNodeForSlug($parentNode, $slug){
		if($parentNode){
			return $this->findOneBy(array('slug' => $slug, 'parent' => $parentNode->getId()));
		}
		return $this->findOneBy(array('slug' => $slug));
	}
}